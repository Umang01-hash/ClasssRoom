{"version":3,"sources":["components/images.js","config/fire.js","components/Login.js","components/Header.js","components/HomeComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js","images/bgImage.jpg","images/laptop.png","images/Class.jpg"],"names":["image","background","require","laptop","class","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","props","state","show","email","password","handleClose","bind","login","handleChange","e","preventDefault","auth","signInWithEmailAndPassword","this","then","catch","err","console","log","setState","target","name","value","id","Navbar","bg","Brand","href","Nav","className","Link","icon","faQuestionCircle","Button","onClick","faSignInAlt","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","onChange","type","placeholder","variant","src","Footer","style","fontSize","Image","fluid","Component","popover","Popover","Content","logout","signOut","fixed","faHome","size","OverlayTrigger","trigger","placement","overlay","faPlus","faSignOutAlt","Home","Main","App","user","authListener","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"0RAAaA,EAAQ,CACjBC,WAAYC,EAAQ,IACpBC,OAAQD,EAAQ,IAChBE,MAAOF,EAAQ,K,QCYFG,E,OAFFC,EAASC,cAXH,CACjBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCkGJC,E,kDAjGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAM,EACNC,MAAO,GACPC,SAAU,IAEd,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBATN,E,kDAYZG,GACFA,EAAEC,iBACFtB,EAAKuB,OAAOC,2BAA2BC,KAAKZ,MAAME,MAAOU,KAAKZ,MAAMG,UAAUU,OAAOC,OAAM,SAACC,GACxFC,QAAQC,IAAIF,Q,mCAIPP,GACTI,KAAKM,SAAL,eACKV,EAAEW,OAAOC,KAAQZ,EAAEW,OAAOE,U,oCAK/BT,KAAKM,SAAS,CACVjB,MAAOW,KAAKZ,MAAMC,S,+BAKtB,OACI,yBAAKqB,GAAG,MACJ,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,SACP,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,aACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,QAAO,kBAAC,IAAD,CAAiBI,KAAMC,MAA7C,SACA,kBAACC,EAAA,EAAD,CAAQC,QAASrB,KAAKR,aAAa,kBAAC,IAAD,CAAiB0B,KAAMI,MAA1D,cAIZ,6BACI,kBAACC,EAAA,EAAD,CACIlC,KAAMW,KAAKZ,MAAMC,KACjBmC,OAAQxB,KAAKR,YACbiC,SAAS,SACTC,UAAU,GAEV,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACrB,kBAACL,EAAA,EAAMM,MAAP,mBAEJ,kBAACN,EAAA,EAAMO,KAAP,KACI,wBAAId,UAAU,eAAd,WAAwC,6BACxC,kBAACe,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBAClB,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3B,KAAK,QAAQ4B,SAAUpC,KAAKL,aAAcc,MAAOT,KAAKZ,MAAME,MAAO+C,KAAK,QAAQC,YAAY,iBAG9G,kBAACP,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBAClB,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKI,QAAN,CAAc3B,KAAK,WAAW4B,SAAUpC,KAAKL,aAAcc,MAAOT,KAAKZ,MAAMG,SAAU8C,KAAK,WAAWC,YAAY,cAEvH,kBAACP,EAAA,EAAKC,MAAN,KACI,yBAAKhB,UAAU,qCAAf,MACA,yBAAKA,UAAU,iCAAgC,kBAACI,EAAA,EAAD,CAAQmB,QAAQ,SAAQ,yBAAKC,IAAI,2DAAjC,2BAC/C,yBAAKxB,UAAU,qCAAf,0BACA,yBAAKA,UAAU,iCAAgC,uBAAGF,KAAK,KAAR,yBAI3D,kBAACS,EAAA,EAAMkB,OAAP,KACI,kBAACrB,EAAA,EAAD,CAAQmB,QAAQ,YAAYlB,QAASrB,KAAKR,aAA1C,SAGA,kBAAC4B,EAAA,EAAD,CAAQmB,QAAQ,UAAUlB,QAASrB,KAAKN,OAAxC,WAAwD,kBAAC,IAAD,CAAiBwB,KAAMI,UAI3F,yBAAKN,UAAU,aACX,wBAAIA,UAAU,0BAA0B0B,MAAO,CAACC,SAAU,KAA1D,wBACA,yBAAK3B,UAAU,OACX,yBAAKA,UAAU,yBACX,kBAAC4B,EAAA,EAAD,CAAOC,OAAK,EAACL,IAAKtE,EAAMG,UAE5B,yBAAK2C,UAAU,eACX,wBAAIA,UAAU,+BAAd,0E,GA1FR8B,a,kBCHdC,EACF,kBAACC,EAAA,EAAD,CAAStC,GAAG,iBACV,kBAACsC,EAAA,EAAQC,QAAT,CAAiBjC,UAAU,aACzB,kBAACD,EAAA,EAAIE,KAAL,CAAUD,UAAU,QAApB,cACA,6BACA,kBAACD,EAAA,EAAIE,KAAL,CAAUD,UAAU,QAApB,kBAuCOW,E,kDAhCX,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACD+D,OAAS,EAAKA,OAAOzD,KAAZ,gBAFC,E,qDAMflB,EAAKuB,OAAOqD,Y,+BAKZ,OACI,6BACI,kBAACxC,EAAA,EAAD,CAAQC,GAAG,QAAQwC,MAAM,OACrB,kBAACzC,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,aACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KAAU,kBAAC,IAAD,CAAiBC,KAAMmC,IAAQrC,UAAU,OAAOsC,KAAK,OAA/D,aAEJ,kBAACvC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAACsC,EAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,SAASC,QAASX,GACxD,kBAAC,IAAD,CAAiB7B,KAAMyC,IAAQL,KAAK,SAG5C,kBAACvC,EAAA,EAAIE,KAAL,CAAUH,KAAK,QAAO,kBAAC,IAAD,CAAiBI,KAAMC,MAA7C,SACA,kBAACC,EAAA,EAAD,CAAQC,QAASrB,KAAKkD,QAAQ,kBAAC,IAAD,CAAiBhC,KAAM0C,MAArD,oB,GA3BHd,aCFNe,E,uKARP,OACI,yBAAK7C,UAAU,QACX,kBAAC4B,EAAA,EAAD,CAAOJ,IAAKtE,EAAMI,MAAOuE,OAAK,S,GAJ3BC,aCcJgB,E,uKATP,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANGhB,aCgCJiB,E,kDA/Bb,WAAY5E,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACT4E,KAAM,IAHQ,E,gEAQhBhE,KAAKiE,iB,qCAGQ,IAAD,OACZ1F,EAAKuB,OAAOoE,oBAAmB,SAACF,GAC3BA,EACD,EAAK1D,SAAS,CAAC0D,SAGf,EAAK1D,SAAS,CAAC0D,KAAO,Y,+BAM1B,OACE,yBAAKhD,UAAU,OACZhB,KAAKZ,MAAM4E,KAAQ,kBAAC,IAAD,KAAe,kBAAC,EAAD,OAA4B,kBAAC,EAAD,W,GA1BrDlB,aCMEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9E,MAAK,SAAA+E,GACJA,EAAaC,gBAEd/E,OAAM,SAAAgF,GACL9E,QAAQ8E,MAAMA,EAAMC,a,6EEzI5BC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.f151ea5a.chunk.js","sourcesContent":["export const image = {\n    background: require('../images/bgImage.jpg'),\n    laptop: require('../images/laptop.png'),\n    class: require('../images/Class.jpg')\n}","import firebase from 'firebase';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCVVlg8u5RHOxvsqKUMVyo6sc_oJX3bLeg\",\n    authDomain: \"classroom-a2309.firebaseapp.com\",\n    databaseURL: \"https://classroom-a2309.firebaseio.com\",\n    projectId: \"classroom-a2309\",\n    storageBucket: \"classroom-a2309.appspot.com\",\n    messagingSenderId: \"630709929719\",\n    appId: \"1:630709929719:web:1209b65f92a36e43b675f2\",\n    measurementId: \"G-R7C10V9XN6\"\n  };\n\n  const fire = firebase.initializeApp(firebaseConfig);\n\n  export default fire;","import React, { useState, Component } from 'react';\nimport { Navbar, Nav, Button, Modal, Form, Image, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { image } from './images';\nimport '../index.css';\nimport fire from '../config/fire';\n\n\nclass Login extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            show: false,\n            email: \"\",\n            password: \"\"\n        }\n        this.handleClose = this.handleClose.bind(this);\n        this.login = this.login.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    login(e){\n        e.preventDefault();\n        fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then().catch((err) =>{\n            console.log(err);\n        })\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleClose(){\n        this.setState({\n            show: !this.state.show\n        })\n    }\n\n    render(){\n        return (\n            <div id=\"bg\">\n                <div>\n                    <Navbar bg=\"light\">\n                        <Navbar.Brand href=\"#\">ClassRoom</Navbar.Brand>\n                        <Nav className=\"ml-auto\">\n                            <Nav.Link href=\"help\"><FontAwesomeIcon icon={faQuestionCircle} /> Help</Nav.Link>\n                            <Button onClick={this.handleClose}><FontAwesomeIcon icon={faSignInAlt} /> SignIn</Button>\n                        </Nav>\n                    </Navbar>\n                </div>\n                <div>\n                    <Modal\n                        show={this.state.show}\n                        onHide={this.handleClose}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>ClassRoom</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <h4 className=\"text-center\">Sign In</h4><hr />\n                            <Form>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>Email address</Form.Label>\n                                    <Form.Control name=\"email\" onChange={this.handleChange} value={this.state.email} type=\"email\" placeholder=\"Enter email\" />\n                                </Form.Group>\n    \n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control name=\"password\" onChange={this.handleChange} value={this.state.password} type=\"password\" placeholder=\"Password\" />\n                                </Form.Group>\n                                <Form.Group>\n                                    <div className=\"d-flex justify-content-center m-1\">OR</div>\n                                    <div className=\"d-flex justify-content-center\"><Button variant=\"light\"><img src=\"https://img.icons8.com/color/32/000000/google-logo.png\" />| CONTINUE WITH GOOGLE</Button></div>\n                                    <div className=\"d-flex justify-content-center m-1\">Don't have an account?</div>\n                                    <div className=\"d-flex justify-content-center\"><a href=\"#\">Create an Account</a></div>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"success\" onClick={this.login} >Sign In <FontAwesomeIcon icon={faSignInAlt} /></Button>\n                        </Modal.Footer>\n                    </Modal>\n                </div>\n                <div className=\"container\">\n                    <h1 className=\"text-center heading m-5\" style={{fontSize: 65}}>Welcome To ClassRoom</h1>\n                    <div className=\"row\">\n                        <div className=\"col align-self-center\">\n                            <Image fluid src={image.laptop} />\n                        </div>\n                        <div className=\"col mt-lg-5\">\n                            <h1 className=\"heading text-center mt-lg-5\">Everything teachers and students need to work better, together</h1>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Nav, Navbar, Button, NavItem, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faSignOutAlt, faHome, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport fire from '../config/fire';\n\nconst popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Content className=\"container\">\n        <Nav.Link className=\"pb-0\">Join Class</Nav.Link>\n        <hr/>\n        <Nav.Link className=\"pt-0\">Create Class</Nav.Link>\n      </Popover.Content>\n    </Popover>\n  );\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n    }\n\n    logout() {\n        fire.auth().signOut();\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"light\" fixed=\"top\">\n                    <Navbar.Brand href=\"#\">ClassRoom</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link><FontAwesomeIcon icon={faHome} className=\"mr-2\" size=\"lg\" /> Classes</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link>\n                            <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                                <FontAwesomeIcon icon={faPlus} size=\"lg\" />\n                            </OverlayTrigger>\n                        </Nav.Link>\n                        <Nav.Link href=\"help\"><FontAwesomeIcon icon={faQuestionCircle} /> Help</Nav.Link>\n                        <Button onClick={this.logout}><FontAwesomeIcon icon={faSignOutAlt} /> Sign Out</Button>\n                    </Nav>\n                </Navbar>\n            </div>\n        );\n    }\n}\nexport default Header;","import React, { Component } from 'react';\nimport { Image } from 'react-bootstrap';\nimport { image } from './images';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className=\"mt-5\">\n                <Image src={image.class} fluid />\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Login from './Login';\nimport fire from '../config/fire';\nimport Header from './Header';\nimport Home from './HomeComponent';\n\nclass Main extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <Home />\n            </div>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport Login from './components/Login';\nimport fire from './config/fire';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      user: {}\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      if(user){\n        this.setState({user})\n      }\n      else{\n        this.setState({user : null})\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.user ? (<BrowserRouter><Main /></BrowserRouter>) : <Login />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bgImage.eae13084.jpg\";","module.exports = __webpack_public_path__ + \"static/media/laptop.742bccd4.png\";","module.exports = __webpack_public_path__ + \"static/media/Class.2fde86d6.jpg\";"],"sourceRoot":""}